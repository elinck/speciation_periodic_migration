

// set up simulation parameters
initialize() {

	//simulation parameters
	initializeTreeSeq();
	initializeMutationRate(0); //faster to put down mutations on treeseqs with msprime if neutral, switch to 0 for parallel runs
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 1e7);
	initializeRecombinationRate(1e-8);
}

// create 2 populations of 10000 individuals 
1 {
	sim.addSubpop("p1",10000);
	sim.addSubpop("p2", 10000);
	p1.setMigrationRates(p2,0.5);
	p2.setMigrationRates(p1,0.5);
	print("and we're off");
}

early(){
	if(sim.generation % 1e4==0){
		print("at generation "+sim.generation);
	}
}

// constant migration at rate 4.96e-05 (should produce equilibrium Fst ~ 0.33, as in periodic Vostok sims)
100000 early() {
		p1.setMigrationRates(p2,4.96e-05);
		p2.setMigrationRates(p1,4.96e-05);
}

// output final tree sequence
515000 late() { 
	outname="/home/cbattey2/speciation_cyclical_migration/simulations/neutral/constant_migration/IMconst_"+format("%.0f",runif(1,1e6,1e7-1))+".trees";
	sim.treeSeqOutput(outname);
	sim.simulationFinished();
}
