// set up speciation by drift w/ BDMI model
// edited 0826 to try and fix quick speciation issue
initialize() {
	initializeMutationRate(1e-4);
	
	// m1 mutation type: BDMI locus a
	initializeMutationType("m1", 0.5, "f", 0);
	
	// m2 mutation type: neutral
	initializeMutationType("m2", 0.5, "f", 0);
	
	// m3 mutation type: BDMI locus b
	initializeMutationType("m3", 0.5, "f", 0);
	
	// g1 genomic element type for locus a
	initializeGenomicElementType("g1", m1, 1.0);
	
	// g2 genomic element type for locus b
	initializeGenomicElementType("g2", m2, 1.0);
	
	// g3 genomic element type for other loci
	initializeGenomicElementType("g3", m3, 1.0);
	
	// specify genomic regions (BDMI loci 1 site each)
	initializeGenomicElement(g1, 0, 0);
	initializeGenomicElement(g3, 1, 1);
	initializeRecombinationRate(0);
}

// create a population of 100 individuals
1 {
	sim.addSubpop("p1", 100);
	sim.addSubpop("p2", 100);
	p1.setMigrationRates(p2,0.025);
	p2.setMigrationRates(p1,0.025);
}

// delete bad mutations in p1 
1: late() {
   sim.mutations[sim.mutations.originGeneration == sim.generation & sim.mutations.subpopID == 2].setMutationType(m2);
}

// stop simulation when both loci have drifted to fixation
1:1000000000 late() {
	count1 = sum(p1.genomes.countOfMutationsOfType(m1)>=1);
	count2 = sum(p1.genomes.countOfMutationsOfType(m3)>=1);
	if (count1 == 200 & count2 == 200)
	{
			sim.simulationFinished();
			sim.outputFixedMutations();
			line = paste(sim.generation);
			writeFile("~/Dropbox/speciation_cyclical_migration/simple_model_output/parapatry_neutral.txt", line, append=T);
		}
}